var emailTemplateModal = $('#modal-invite');

toggleSpinner(false);

if (emailTemplateModal) {
  // Redraw the modal based on the selected Template
  emailTemplateModal.find('.modal-body').html('<%=
    escape_javascript(
      render(
        partial: "paginable/templates/invite_modal_content",
        locals: { template: @template }
      )
    ) %>');

  emailTemplateModal.on('show.bs.modal', (e) => {
    // We need to do this in the event that the user opened the modal, then closed it,
    // and then reopens it.
    Tinymce.destroyEditorById('plan_template_attributes_email_body');
    // Make the email body editor a TinyMCE editor
    Tinymce.init({ selector: '#plan_template_attributes_email_body' });

    var emailControl = emailTemplateModal.find('#plan_user_email');
    var emailBodyControl = Tinymce.findEditorById('plan_template_attributes_email_body');
    var emailWelcomePreview = emailTemplateModal.find('.replaceable-template-email-welcome');
    var emailPreview = emailTemplateModal.find('.replaceable-template-email-content');

    // Add handlers to the email address and TinyMCE editor so that changes update
    // the preview section
    if (emailControl && emailBodyControl && emailPreview) {
      emailControl.on('keyup', (e) => {
        emailWelcomePreview.html(`Hello ${$(e.target).val()},`);
      });

      emailBodyControl.on('keyup', (e) => {
        emailPreview.html($(e.target).html());
      });
    }

    // Hide the modal and display the spinner after the user submits the form
    emailTemplateModal.find('form').on('submit', () => {
      emailTemplateModal.modal('hide');
      toggleSpinner(true);
    });
  });

  emailTemplateModal.modal('show');
}
